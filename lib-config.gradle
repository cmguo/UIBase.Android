def properties = new Properties()
properties.load(new FileInputStream("${project.getRootDir()}/local.properties"))

def USERNAME = properties.getProperty("USERNAME")
def PASSWORD = properties.getProperty("PASSWORD")

def isAndroid() { return project.hasProperty("android") }

if (isAndroid()) { // Android libraries
    println "Android case"
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }
    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    println "Java case"

    task sourcesJar(overwrite: true, type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(overwrite: true, type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// 上传源文件
artifacts {
//    archives javadocJar
    archives sourcesJar
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

apply plugin: 'maven'
uploadArchives {
    repositories.mavenDeployer {
        final String url = build_branch.startsWith("release/")
                ? "http://nexus.xiaoheiban.cn/repository/component"
                : "http://nexus.xiaoheiban.cn/repository/component-snapshots"
        repository(url: url) {
            authentication(userName: USERNAME, password: PASSWORD)
        }
        pom.name = "xhb-base"
        pom.groupId = "com.xhb.base"
        pom.packaging = 'aar'
    }
}
